---
version: "3.6"
services:
  # NginX reverse proxy:
  nginx:
    container_name: "nginx-router-wordpress"
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD-SHELL", "nginx -t 2>&1 | grep 'test is successful' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 7
      start_period: 10s
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "./config/yoastnginx.conf:/etc/nginx/conf.d/yoastnginx.conf"
      - "./config/certs:/etc/nginx/certs"
    networks:
      wordpress_net:
        aliases:
          - ${BASIC_HOST:-basic.wordpress.test}
          - ${WOOCOMMERCE_HOST:-woocommerce.wordpress.test}
          - ${MULTISITE_HOST:-multisite.wordpress.test}
          - ${MULTISITEDOMAIN_HOST:-multisite.wordpress.test}
          - test.${MULTISITEDOMAIN_HOST:-multisite.wordpress.test}
          - translate.${MULTISITEDOMAIN_HOST:-multisite.wordpress.test}
          - ${STANDALONE_HOST:-standalone.wordpress.test}
          - ${NIGHTLY_HOST:-nightly.wordpress.test}
          - mailhog.local
    labels:
      - dev.orbstack.domains=mailhog.local

  # Mailhog:
  mailhog:
    container_name: "mailhog-wordpress"
    image: mailhog/mailhog
    platform: linux/amd64
    # logging:
    #   driver: none  # disable saving logs to prevent bloat
    ports:
      - 127.0.0.1:8025:8025 # web ui
    networks:
      - wordpress_net
    environment:
       VIRTUAL_HOST: mailhog.local
       VIRTUAL_PORT: 8025 

  # Redis container for use with WordPress
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis-cache:/data
    networks:
      - wordpress_net

  # Memcached container for use with WordPress
  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    networks:
      - wordpress_net

  # PHPCacheAdmin container for a small tool to check Memcached and Redis statistics
  phpcacheadmin:
    image: robinn/phpcacheadmin
    ports:
      - "8090:80"
    environment:
      - PCA_REDIS_0_HOST=redis
      - PCA_REDIS_0_PORT=6379
      - PCA_MEMCACHED_0_HOST=memcached
      - PCA_MEMCACHED_0_PORT=11211
    networks:
      - wordpress_net

  # base database:
  base-database:
    image: ${LOCAL_DB_TYPE-mysql}:${LOCAL_DB_VERSION-5.7.25}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    healthcheck:
      # needs to work for both MySQL and mariaDB
      test:
        [
          "CMD-SHELL",
          "mysqladmin -u $$MYSQL_USER -p$$MYSQL_PASSWORD  ping -P 3306 -h $$(hostname) | grep -q 'mysqld is alive'"
        ]
      interval: 1s
      timeout: 10s
      retries: 1200
    profiles: [ "base_service" ]
    networks:
      - wordpress_net

  # base wordpress
  base-wordpress:
    depends_on:
      nginx:
        condition: service_started
      mailhog:
        condition: service_started
      redis:
        condition: service_started
      memcached:
        condition: service_started
      phpcacheadmin:
        condition: service_started
    build:
      context: .
      dockerfile: ./containers/wordpress/Dockerfile
      args:
        - GID=${GID:-1000}
        - UID=${LOCAL_UID:-1000}
    restart: always
    expose:
      - 80
    environment:
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - "./wordpress:/var/www/html"
      - "./plugins:/var/www/html/wp-content/plugins"
      - "./xdebug:/var/xdebug"
      - "./config/php.ini:/usr/local/etc/php/conf.d/custom.ini"
    labels:
      - com.yoast.plugin-development-docker.mainwpinstance
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /tmp/done ]" ]
      interval: 1s
      timeout: 5s
      retries: 1200
    profiles: [ "base_service" ]
    networks:
      - wordpress_net

  # Basic WordPress:
  basic-database:
    extends:
      service: base-database
    container_name: "wordpress-basic-database"
    ports:
      - "1987:3306"
    volumes:
      - "basic-database-data:/var/lib/mysql"
    profiles: [ "basic-wordpress" ]

  basic-wordpress:
    extends:
      service: base-wordpress
    container_name: "basic-wordpress"
    depends_on:
      basic-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=basic-wordpress-seed.sh
    environment:
      SITE_TITLE: Basic
      SITE_URL: ${BASIC_HOST:-basic.wordpress.test}
      VIRTUAL_HOST: ${BASIC_HOST:-basic.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-basic-database
    volumes:
      - "./config/basic/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "basic-wordpress" ]

  # WooCommerce WordPress:
  woocommerce-database:
    extends:
      service: base-database
    container_name: "wordpress-woocommerce-database"
    ports:
      - "1988:3306"
    volumes:
      - "woocommerce-database-data:/var/lib/mysql"
    profiles: [ "woocommerce-wordpress" ]

  woocommerce-wordpress:
    extends:
      service: base-wordpress
    container_name: "woocommerce-wordpress"
    depends_on:
      woocommerce-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=woocommerce-wordpress-seed.sh
    environment:
      SITE_TITLE: WooCommerce
      SITE_URL: ${WOOCOMMERCE_HOST:-woocommerce.wordpress.test}
      VIRTUAL_HOST: ${WOOCOMMERCE_HOST:-woocommerce.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-woocommerce-database
    volumes:
      - "./config/woocommerce/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "woocommerce-wordpress" ]

  # Multisite WordPress:
  multisite-database:
    extends:
      service: base-database
    container_name: "wordpress-multisite-database"
    ports:
      - "1989:3306"
    volumes:
      - "multisite-database-data:/var/lib/mysql"
    profiles: [ "multisite-wordpress" ]

  multisite-wordpress:
    extends:
      service: base-wordpress
    container_name: "multisite-wordpress"
    depends_on:
      multisite-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=multisite-wordpress-seed.sh
    environment:
      SITE_TITLE: multisite
      SITE_URL: ${MULTISITE_HOST:-multisite.wordpress.test}
      VIRTUAL_HOST: ${MULTISITE_HOST:-multisite.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-multisite-database
    volumes:
      - "./config/multisite.htaccess:/var/www/html/.htaccess"
      - "./config/multisite/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "multisite-wordpress" ]

  # Multisite WordPress using Subdomains:
  multisitedomain-database:
    extends:
      service: base-database
    container_name: "wordpress-multisitedomain-database"
    ports:
      - "1991:3306"
    volumes:
      - "multisitedomain-database-data:/var/lib/mysql"
    profiles: [ "multisitedomain-wordpress" ]

  multisitedomain-wordpress:
    extends:
      service: base-wordpress
    container_name: "multisitedomain-wordpress"
    depends_on:
      multisitedomain-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=multisitedomain-wordpress-seed.sh
    environment:
      SITE_TITLE: multisitedomain
      SITE_URL: ${MULTISITEDOMAIN_HOST:-multisite.wordpress.test}
      VIRTUAL_HOST: ${MULTISITEDOMAIN_HOST:-multisite.wordpress.test},test.${MULTISITEDOMAIN_HOST:-multisite.wordpress.test},translate.${MULTISITEDOMAIN_HOST:-multisite.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-multisitedomain-database
    volumes:
      - "./config/multisite.htaccess:/var/www/html/.htaccess"
      - "./config/multisitedomain/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "multisitedomain-wordpress" ]

  # Standalone WordPress:
  standalone-database:
    extends:
      service: base-database
    container_name: "wordpress-standalone-database"
    ports:
      - "1990:3306"
    volumes:
      - "standalone-database-data:/var/lib/mysql"
    profiles: [ "standalone-wordpress" ]

  standalone-wordpress:
    extends:
      service: base-wordpress
    container_name: "standalone-wordpress"
    depends_on:
      standalone-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=standalone-wordpress-seed.sh
    environment:
      SITE_TITLE: Standalone
      SITE_URL: ${STANDALONE_HOST:-standalone.wordpress.test}
      VIRTUAL_HOST: ${STANDALONE_HOST:-standalone.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-standalone-database
    volumes:
      - "./sa-plugins:/var/www/html/wp-content/plugins"
      - "./config/standalone/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "standalone-wordpress" ]

  # Nightly WordPress:
  nightly-database:
    extends:
      service: base-database
    container_name: "wordpress-nightly-database"
    ports:
      - "1992:3306"
    volumes:
      - "nightly-database-data:/var/lib/mysql"
    profiles: [ "nightly-wordpress" ]

  nightly-wordpress:
    extends:
      service: base-wordpress
    container_name: "nightly-wordpress"
    depends_on:
      nightly-database:
        condition: service_healthy
    build:
      args:
        - SEED_FILE=nightly-wordpress-seed.sh
    environment:
      SITE_TITLE: nightly
      SITE_URL: ${NIGHTLY_HOST:-nightly.wordpress.test}
      VIRTUAL_HOST: ${NIGHTLY_HOST:-nightly.wordpress.test}
      WORDPRESS_DB_HOST: wordpress-nightly-database
    volumes:
      - "./wordpress-nightly:/var/www/html"
      - "./config/nightly/wp-config.php:/var/www/html/wp-config.php"
    profiles: [ "nightly-wordpress" ]

volumes:
  basic-database-data:
  woocommerce-database-data:
  multisite-database-data:
  multisitedomain-database-data:
  standalone-database-data:
  nightly-database-data:
  redis-cache:
    driver: local


networks:
  wordpress_net:
    driver: bridge
    name: yoast-docker
